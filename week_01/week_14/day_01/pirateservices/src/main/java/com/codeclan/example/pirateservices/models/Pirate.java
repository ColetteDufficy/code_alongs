package com.codeclan.example.pirateservices.models;
import javax.persistence.*;

@Entity //required. @Entity is an annotation that lets Hibernate know that we want to map this class to a database table.
@Table(name="pirates") //@Table is an annotation that tells Hibernate the name of the table we want to map to.
public class Pirate {

    //class properties(variables) below:
    @Id //required
    @GeneratedValue(strategy = GenerationType.IDENTITY) //required. This uses an auto-incremented value generated by the database. So at the point the object is instantiated, its id property is null. When it is saved into the database, the value for the id is generated and used as the primary key.
    @Column(name="id")
    private Long id; //annotations. naming the columns of the schema table
    @Column(name="first_name") //note snake case syntax
    private String firstName;
    @Column(name="last_name")
    private String lastName;
    @Column(name="age")
    private int age;

    public Pirate(String firstName, String lastName, int age){ //this is the populated constructor. they have no return type
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;

        // All Java classes that will be mapped need a default constructor (an empty constructor that takes no arguments), in additional to any required constructors that take arguments.
    }

    public Pirate() { //this the empty constructor to follow the rules of POJO
    }

    public Long getId() {
        return id;
    }

    public void setId() {
        this.id = id;
    }

    public String getFirstName(){
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public int age() {
        return this.age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}
